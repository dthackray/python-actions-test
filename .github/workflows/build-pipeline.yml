name: Build Pipeline
run-name: ${{ github.sha }} - ${{ github.event.head_commit.message }}
on: [push]
jobs:
  lock_file:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/setup
      - run: uv lock --locked
  linting:
    runs-on: ubuntu-latest
    needs: [lock_file]
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/setup
      - run: uvx ruff check .
  formatting:
    runs-on: ubuntu-latest
    needs: [lock_file]
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/setup
      - run: uvx ruff format --check .
  type_consistency:
    runs-on: ubuntu-latest
    needs: [lock_file]
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/setup
      - run: uv run pyright .
  test:
    runs-on: ubuntu-latest
    needs: [linting, formatting, type_consistency]
    outputs:
      sha_short: ${{ steps.vars.outputs.sha_short }}
    steps:
      - uses: actions/checkout@v4
      - name: Set commit SHA variables
        id: vars
        run: echo "sha_short=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT
      - name: Install uv
        uses: astral-sh/setup-uv@v3
      - name: Set up Python
        run: uv python install
      - name: Install the project
        run: uv sync --all-extras --dev
      - name: Run tests
        run: |
          PYTHONPATH=$PYTHONPATH:$(pwd)/src uv run pytest tests/ \
          --html=${{ steps.vars.outputs.sha_short }}-pipeline-pytest.html \
          --self-contained-html \
          --cov=src \
          --cov-report=term \
          --cov-report=html:${{ steps.vars.outputs.sha_short }}-pipeline-coverage
      - name: Upload Pipeline Test Reports
        uses: actions/upload-artifact@v4
        with:
          name: pipeline-test-reports
          path: |
            ${{ steps.vars.outputs.sha_short }}-pipeline-pytest.html
            ${{ steps.vars.outputs.sha_short }}-pipeline-coverage/
  build:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          push: true
          tags: |
            ${{ secrets.DOCKERHUB_USERNAME }}/python-actions-test:${{ needs.test.outputs.sha_short }}
            ${{ secrets.DOCKERHUB_USERNAME }}/python-actions-test:latest
      - name: Extract test reports from image
        run: |
          CONTAINER_ID=$(docker create ${{ secrets.DOCKERHUB_USERNAME }}/python-actions-test:${{ needs.test.outputs.sha_short }})
          docker cp $CONTAINER_ID:/app/reports ./temp-reports
          docker rm $CONTAINER_ID
          mv ./temp-reports/pytest.html ./${{ needs.test.outputs.sha_short }}-docker-pytest.html
          mv ./temp-reports/coverage ./${{ needs.test.outputs.sha_short }}-docker-coverage
      - name: Upload Docker Test Reports
        uses: actions/upload-artifact@v4
        with:
          name: docker-test-reports
          path: |
            ${{ needs.test.outputs.sha_short }}-docker-pytest.html
            ${{ needs.test.outputs.sha_short }}-docker-coverage/
